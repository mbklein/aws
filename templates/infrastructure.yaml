AWSTemplateFormatVersion: '2010-09-09'
Description: Hydra Base Stack
Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the ECS instances
  S3Bucket:
    Type: String
    Description: S3 bucket to the cfn deployment artifacts
  S3BucketEB:
    Type: String
    Description: S3 bucket to the eb deployment artifacts
  S3KeyPrefix:
    Description: S3 prefix to deployment artifacts
    Type: String
    Default: infrastructure/current
  PublicZoneName:
    Type: String
    Description: Existing Route53 zone; used to create a public DNS record for the
      web application
  FcrepoDatabaseUsername:
    Type: String
    Description: Database Root Username
    Default: ebroot
  FcrepoDatabasePassword:
    Type: String
    Description: Password for the DB Root User
    NoEcho: 'true'
  FcrepoDatabaseName:
    Type: String
    Description: Name of the database
    Default: fcrepo
  FcrepoDatabaseStorageSize:
    Type: Number
    Description: Size of DB in Gigs
    Default: '5'
  FcrepoDatabaseMultiAZ:
    Type: String
    Description: Launch the database in multiple availability zones
    AllowedValues:
    - 'true'
    - 'false'
    Default: 'true'
  FcrepoBinaryBucket:
    Type: String
    Description: S3 Bucket for Fedora's binary object store
  FcrepoInstanceType:
    Type: String
    Description: Instance type to launch
    Default: t2.large
  S3FedoraFilename:
    Type: String
    Description: S3 key to the Fcrepo war
    Default: fcrepo.war
  FcrepoMinSize:
    Type: Number
    Description: Minimum number of Fedora instances to launch
    Default: '1'
  FcrepoMaxSize:
    Type: Number
    Description: Maximum number of Fedora instances to launch
    Default: '1'
  SolrCloudInstanceType:
    Type: String
    Description: Instance type to launch
    Default: t2.large
  S3SolrFilename:
    Type: String
    Description: S3 key to the Solr zip file
    Default: 'solr.zip'
  SolrCloudMinSize:
    Type: Number
    Description: Minimum number of Solr instances to launch
    Default: '3'
  SolrCloudMaxSize:
    Type: Number
    Description: Maximum number of Solr instances to launch
    Default: '9'
  RedisInstanceType:
    Type: String
    Description: Instance type to launch
    Default: cache.m1.small
  BastionInstanceType:
    Type: String
    Description: The EC2 instance type
    Default: t2.nano
  FcrepoDatabaseInstanceType:
    Type: String
    Description: Instance type to launch
    Default: db.t2.large
  ZookeeperInstanceType:
    Type: String
    Description: Instance type to launch
    Default: t2.micro
  S3ZookeeperFilename:
    Type: String
    Description: S3 key to the Zookeeper zip file
    Default: 'zookeeper.zip'
  ZookeeperMinSize:
    Type: Number
    Description: Minimum number of Zookeeper instances to launch
    Default: '2'
  ZookeeperMaxSize:
    Type: Number
    Description: Maximum number of Zookeeper instances to launch
    Default: '6'
  VpnFqdn:
    Description: The fully-qualified hostname for the VPN server
    Type: String
  VpnUser:
    Description: The username for the VPN user
    Type: String
    Default: admin
  VpnPassword:
    Type: String
    Description: The password for the VPN user
    NoEcho: 'true'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Deployment Artifacts
      Parameters:
      - S3Bucket
      - S3KeyPrefix
      - S3BucketEB
    - Label:
        default: Network Configuration
      Parameters:
      - KeyName
      - PublicZoneName
    - Label:
        default: Resources
      Parameters:
      - FcrepoDatabaseInstanceType
      - RedisInstanceType
      - FcrepoInstanceType
      - SolrCloudSize
      - SolrCloudInstanceType
      - ZookeeperInstanceType
    - Label:
        default: Fedora Repository Configuration
      Parameters:
      - S3FedoraFilename
      - FcrepoDatabaseUsername
      - FcrepoDatabasePassword
    - Label:
        default: OpenVPN Configuration
      Parameters:
      - VpnFqdn
      - VpnUser
      - VpnPassword
Resources:
  vpc:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref 'AWS::StackName'
        KeyName: !Sub '${KeyName}'
        HostedZoneName: !Sub '${AWS::StackName}.vpc.${PublicZoneName}'
      TemplateURL: !Sub 'https://s3.amazonaws.com/${S3Bucket}/cloudformation/${S3KeyPrefix}/templates/vpc.yaml'
  securitygroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref 'AWS::StackName'
        VPC: !GetAtt 'vpc.Outputs.VPCID'
      TemplateURL: !Sub 'https://s3.amazonaws.com/${S3Bucket}/cloudformation/${S3KeyPrefix}/templates/securitygroups.yaml'
  zookeeper:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref 'AWS::StackName'
        InstanceType: !Ref 'ZookeeperInstanceType'
        KeyName: !Sub '${KeyName}'
        SubnetID: !GetAtt 'vpc.Outputs.PrivateSubnets'
        SecurityGroups: !Sub '${securitygroups.Outputs.Zookeeper},${securitygroups.Outputs.Default}'
        LBSecurityGroups: !GetAtt 'securitygroups.Outputs.ZookeeperLb'
        HostedZoneName: !GetAtt 'vpc.Outputs.HostedZoneName'
        MinSize: !Ref 'ZookeeperMinSize'
        MaxSize: !Ref 'ZookeeperMaxSize'
        S3Bucket: !Ref 'S3BucketEB'
        S3Key: !Ref 'S3ZookeeperFilename'
      TemplateURL: !Sub 'https://s3.amazonaws.com/${S3Bucket}/cloudformation/${S3KeyPrefix}/templates/zookeeper.yaml'
  fcrepo:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref 'AWS::StackName'
        KeyName: !Sub '${KeyName}'
        SubnetID: !GetAtt 'vpc.Outputs.PrivateSubnets'
        SecurityGroups: !Sub '${securitygroups.Outputs.Fcrepo},${securitygroups.Outputs.Default}'
        LBSecurityGroups: !GetAtt 'securitygroups.Outputs.FcrepoLb'
        S3Bucket: !Ref 'S3BucketEB'
        S3Key: !Ref 'S3FedoraFilename'
        MinSize: !Ref 'FcrepoMinSize'
        MaxSize: !Ref 'FcrepoMaxSize'
        HostedZoneName: !GetAtt 'vpc.Outputs.HostedZoneName'
        InstanceType: !Ref 'FcrepoInstanceType'
        RDSDatabaseName: !GetAtt 'fcrepodb.Outputs.DatabaseName'
        RDSHostname: !GetAtt 'fcrepodb.Outputs.EndpointAddress'
        RDSPort: !GetAtt 'fcrepodb.Outputs.EndpointPort'
        RDSUsername: !Ref 'FcrepoDatabaseUsername'
        RDSPassword: !Ref 'FcrepoDatabasePassword'
        BinaryBucket: !Ref 'FcrepoBinaryBucket'
      TemplateURL: !Sub 'https://s3.amazonaws.com/${S3Bucket}/cloudformation/${S3KeyPrefix}/templates/fcrepo.yaml'
  solr:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref 'AWS::StackName'
        KeyName: !Sub '${KeyName}'
        HostedZoneName: !GetAtt 'vpc.Outputs.HostedZoneName'
        S3Bucket: !Ref 'S3BucketEB'
        S3Key: !Ref 'S3SolrFilename'
        SubnetID: !GetAtt 'vpc.Outputs.PrivateSubnets'
        SecurityGroups: !Sub '${securitygroups.Outputs.Solr},${securitygroups.Outputs.Default}'
        LBSecurityGroups: !GetAtt 'securitygroups.Outputs.SolrLb'
        ZookeeperHosts: !GetAtt 'zookeeper.Outputs.EndpointAddress'
        MinSize: !Ref 'SolrCloudMinSize'
        MaxSize: !Ref 'SolrCloudMaxSize'
        InstanceType: !Ref 'SolrCloudInstanceType'
      TemplateURL: !Sub 'https://s3.amazonaws.com/${S3Bucket}/cloudformation/${S3KeyPrefix}/templates/solr.yaml'
  redis:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref 'AWS::StackName'
        SubnetID: !GetAtt 'vpc.Outputs.PrivateSubnets'
        SecurityGroups: !GetAtt 'securitygroups.Outputs.Redis'
        InstanceType: !Ref 'RedisInstanceType'
        HostedZoneName: !GetAtt 'vpc.Outputs.HostedZoneName'
      TemplateURL: !Sub 'https://s3.amazonaws.com/${S3Bucket}/cloudformation/${S3KeyPrefix}/templates/redis.yaml'
  fcrepodb:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        SubnetID: !GetAtt 'vpc.Outputs.PrivateSubnets'
        SecurityGroups: !GetAtt 'securitygroups.Outputs.FcrepoDatabase'
        MasterUsername: !Ref 'FcrepoDatabaseUsername'
        MasterUserPassword: !Ref 'FcrepoDatabasePassword'
        DatabaseName: !Ref 'FcrepoDatabaseName'
        AllocatedStorage: !Ref 'FcrepoDatabaseStorageSize'
        MultiAZDatabase: !Ref 'FcrepoDatabaseMultiAZ'
        DBInstanceClass: !Ref 'FcrepoDatabaseInstanceType'
      TemplateURL: !Sub 'https://s3.amazonaws.com/${S3Bucket}/cloudformation/${S3KeyPrefix}/templates/postgres.yaml'
  mail:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Domain: !Sub '${AWS::StackName}.${PublicZoneName}'
        HostedZoneName: !Ref 'PublicZoneName'
      TemplateURL: !Sub 'https://s3.amazonaws.com/${S3Bucket}/cloudformation/${S3KeyPrefix}/templates/mail.yaml'
  openvpn:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref 'AWS::StackName'
        KeyName: !Sub '${KeyName}'
        SubnetID: !Select ['0', !Split [',', !GetAtt 'vpc.Outputs.PublicSubnets']]
        SecurityGroups: !Sub '${securitygroups.Outputs.Bastion},${securitygroups.Outputs.OpenVPN}'
        HostedZoneName: !Sub '${AWS::StackName}.${PublicZoneName}'
        VpnFqdn: !Ref 'VpnFqdn'
        VpnUser: !Ref 'VpnUser'
        VpnPassword: !Ref 'VpnPassword'
      TemplateURL: !Sub 'https://s3.amazonaws.com/${S3Bucket}/cloudformation/${S3KeyPrefix}/templates/openvpn.yaml'
  PublicDNS:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: !Sub '${AWS::StackName}.${PublicZoneName}'
  PublicDNSNameServers:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Sub '${AWS::StackName}.${PublicZoneName}'
      HostedZoneName: !Ref 'PublicZoneName'
      Type: NS
      TTL: '900'
      ResourceRecords: !GetAtt 'PublicDNS.NameServers'
Outputs:
  VPN:
    Description: URL for the OpenVPN server
    Value: !GetAtt 'openvpn.Outputs.URL'
  PublicZoneName:
    Description: Name of the public subzone
    Value: !Sub '${AWS::StackName}.${PublicZoneName}'
    Export:
      Name: !Sub '${AWS::StackName}-dns-PublicZoneName'
