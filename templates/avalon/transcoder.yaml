AWSTemplateFormatVersion: '2010-09-09'
Description: Avalon Transcoding Pipeline
Parameters:
  StackName:
    Type: String
    Description: Name of the application stack (for tagging and naming)
  BucketSuffix:
    Type: String
    Description: Prefix to use for MasterFile and Derivative buckets
    Default: 'cfx3wj9'
  S3Bucket:
    Type: String
    Description: S3 bucket to the cfn deployment artifacts
  S3KeyPrefix:
    Description: S3 prefix to deployment artifacts
    Type: String
  BatchIngestFunction:
    Description: ARN of the batch ingest notification lambda function
    Type: String
  GlacierTransitionInDays:
    Type: String
    Description: Number of days before transitioning Masterfiles to Glacier storage class
Resources:
  PipelineFunction:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        StackName: !Ref 'AWS::StackName'
        S3Bucket: !Ref 'S3Bucket'
        S3KeyPrefix: !Ref 'S3KeyPrefix'
        Package: 'transcodingpipeline'
        AllowedActions: 'elastictranscoder:*'
        Timeout: '60'
      TemplateURL: !Sub 'https://s3.amazonaws.com/${S3Bucket}/cloudformation/${S3KeyPrefix}/templates/lambdafunction.yaml'
  MasterfileBucket:
    Type: AWS::S3::Bucket
    DependsOn: NotificationLambdaPolicy
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub '${StackName}-masterfiles-${BucketSuffix}'
      CorsConfiguration:
        CorsRules:
        - AllowedOrigins: ['*']
          AllowedMethods: ["GET", "POST", "PUT"]
      LifecycleConfiguration:
        Rules:
        - Id: MasterfileGlacierRule
          Status: Enabled
          Transitions:
          - StorageClass: GLACIER
            TransitionInDays: !Ref 'GlacierTransitionInDays'      
      NotificationConfiguration:
        LambdaConfigurations:
        - Event: 's3:ObjectCreated:Put'
          Function: !Ref 'BatchIngestFunction'
          Filter: { S3Key: { Rules: [ { Name: 'prefix', Value: 'dropbox/' }, { Name: 'suffix', Value: '.xlsx' } ] } }
        - Event: 's3:ObjectCreated:Post'
          Function: !Ref 'BatchIngestFunction'
          Filter: { S3Key: { Rules: [ { Name: 'prefix', Value: 'dropbox/' }, { Name: 'suffix', Value: '.xlsx' } ] } }
        - Event: 's3:ObjectCreated:Put'
          Function: !Ref 'BatchIngestFunction'
          Filter: { S3Key: { Rules: [ { Name: 'prefix', Value: 'dropbox/' }, { Name: 'suffix', Value: '.xls' } ] } }
        - Event: 's3:ObjectCreated:Post'
          Function: !Ref 'BatchIngestFunction'
          Filter: { S3Key: { Rules: [ { Name: 'prefix', Value: 'dropbox/' }, { Name: 'suffix', Value: '.xls' } ] } }
        - Event: 's3:ObjectCreated:Put'
          Function: !Ref 'BatchIngestFunction'
          Filter: { S3Key: { Rules: [ { Name: 'prefix', Value: 'dropbox/' }, { Name: 'suffix', Value: '.csv' } ] } }
        - Event: 's3:ObjectCreated:Post'
          Function: !Ref 'BatchIngestFunction'
          Filter: { S3Key: { Rules: [ { Name: 'prefix', Value: 'dropbox/' }, { Name: 'suffix', Value: '.csv' } ] } }
        - Event: 's3:ObjectCreated:Put'
          Function: !Ref 'BatchIngestFunction'
          Filter: { S3Key: { Rules: [ { Name: 'prefix', Value: 'dropbox/' }, { Name: 'suffix', Value: '.ods' } ] } }
        - Event: 's3:ObjectCreated:Post'
          Function: !Ref 'BatchIngestFunction'
          Filter: { S3Key: { Rules: [ { Name: 'prefix', Value: 'dropbox/' }, { Name: 'suffix', Value: '.ods' } ] } }
  NotificationLambdaPolicy:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref 'BatchIngestFunction'
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub 'arn:aws:s3:::${StackName}-masterfiles-${BucketSuffix}'
  DerivativeBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub '${StackName}-derivatives-${BucketSuffix}'
  PipelineNotification:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: pipeline-topic
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - elastictranscoder.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
  PipelinePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: pipeline-policy
      Roles:
      - !Ref 'PipelineRole'
      PolicyDocument:
        Version: '2008-10-17'
        Statement:
        - Sid: '1'
          Effect: Allow
          Action:
          - s3:Put*
          - s3:ListBucket
          - s3:*MultipartUpload*
          - s3:Get*
          Resource:
          - !Sub 'arn:aws:s3:::${MasterfileBucket}'
          - !Sub 'arn:aws:s3:::${DerivativeBucket}'
          - !Sub 'arn:aws:s3:::${MasterfileBucket}/*'
          - !Sub 'arn:aws:s3:::${DerivativeBucket}/*'
        - Sid: '2'
          Effect: Allow
          Action: sns:Publish
          Resource:
          - !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${PipelineNotification}'
        - Sid: '3'
          Effect: Deny
          Action:
          - s3:*Delete*
          - s3:*Policy*
          - sns:*Remove*
          - sns:*Delete*
          - sns:*Permission*
          Resource: '*'
  TranscodingPipeline:
    Type: Custom::ElasticTranscoderPipeline
    Version: '1.0'
    Properties:
      ServiceToken: !GetAtt 'PipelineFunction.Outputs.ServiceToken'
      Name: !Sub '${StackName}-transcoding-pipeline'
      Role: !GetAtt 'PipelineRole.Arn'
      InputBucket: !Ref 'MasterfileBucket'
      OutputBucket: !Ref 'DerivativeBucket'
      Notifications:
        Completed: !Ref 'PipelineNotification'
        Error: !Ref 'PipelineNotification'
        Progressing: !Ref 'PipelineNotification'
        Warning: !Ref 'PipelineNotification'
Outputs:
  PipelineArn:
    Description: Transcoding Pipeline ARN
    Value: !Sub '${TranscodingPipeline.Arn}'
  PipelineId:
    Description: Transcoding Pipeline ID
    Value: !Sub '${TranscodingPipeline.Id}'
  PipelineSNSTopic:
    Description: SNS Topic for the transcoding pipeline
    Value: !Ref 'PipelineNotification'
  MasterfileBucket:
    Description: Bucket for Masterfiles
    Value: !Ref 'MasterfileBucket'
  DerivativeBucket:
    Description: Bucket for Derivatives
    Value: !Ref 'DerivativeBucket'
